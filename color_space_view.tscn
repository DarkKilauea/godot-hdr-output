[gd_scene load_steps=4 format=3 uid="uid://5b1vylweoge3"]

[ext_resource type="Script" uid="uid://vnpp0c05n48d" path="res://color_space_view.gd" id="1_xvrak"]

[sub_resource type="Shader" id="Shader_gkq1x"]
code = "shader_type canvas_item;

vec3 xyYToRec709(vec2 xy, float Y)
{
    // https://github.com/ampas/aces-dev/blob/v1.0.3/transforms/ctl/README-MATRIX.md
	const mat3 XYZtoRGB = mat3(
        vec3(3.2409699419, -0.9692436363, 0.0556300797),
        vec3(-1.5373831776, 1.8759675015, -0.2039769589),
        vec3(-0.4986107603, 0.0415550574, 1.0569715142)
    );
    vec3 XYZ = Y * vec3(xy.x / xy.y, 1.0, (1.0 - xy.x - xy.y) / xy.y);
    vec3 RGB = XYZtoRGB * XYZ;
    float maxChannel = max(RGB.r, max(RGB.g, RGB.b));
    return RGB / max(maxChannel, 1.0);
}

void fragment() {
	// Called for every pixel the material is visible on.
	COLOR = vec4(xyYToRec709(UV, 1.0), 1.0);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_av8mp"]
shader = SubResource("Shader_gkq1x")

[node name="ColorSpaceView" type="Control"]
material = SubResource("ShaderMaterial_av8mp")
layout_mode = 3
anchors_preset = 0
script = ExtResource("1_xvrak")
